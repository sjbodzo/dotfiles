command_timeout = 5000

[kubernetes]
format = 'âŽˆ [$context \($namespace\)](#21c262) '
disabled = false

[[kubernetes.contexts]]
context_pattern = "(jess.bodzo-?)(?P<cluster>.*).k8s.ditto.live"
context_alias = "$cluster"
style = "green"

[[kubernetes.contexts]]
context_pattern = "kind-(?P<cluster>.*)"
context_alias = "$cluster"
style = "purple"

[[kubernetes.contexts]]
context_pattern = "k3d-(?P<cluster>.*)"
context_alias = "$cluster"
style = "blue"

[custom.jj]
ignore_timeout = true
description = "The current jj status"
detect_folders = [".jj"]
symbol = "ðŸ¥‹ "
command = '''
jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "ðŸ’¥"),
      if(divergent, "ðŸš§"),
      if(hidden, "ðŸ‘»"),
      if(immutable, "ðŸ”’"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ coalesce(
      truncate_end(29, description.first_line(), "â€¦"),
      "(no description set)",
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''

# re-enable git_branch as long as we're not in a jj repo
[custom.git_branch]
when = true
command = "jj root >/dev/null 2>&1 || starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"

[custom.git_status]
when = true
command = "jj root >/dev/null 2>&1 || starship module git_status"
description = "Only show git_status if we're not in a jj repo"
